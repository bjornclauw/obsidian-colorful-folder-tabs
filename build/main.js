/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var b=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var M=Object.getOwnPropertyNames;var D=Object.prototype.hasOwnProperty;var F=(a,i)=>{for(var e in i)b(a,e,{get:i[e],enumerable:!0})},C=(a,i,e,t)=>{if(i&&typeof i=="object"||typeof i=="function")for(let s of M(i))!D.call(a,s)&&s!==e&&b(a,s,{get:()=>i[s],enumerable:!(t=T(i,s))||t.enumerable});return a};var L=a=>C(b({},"__esModule",{value:!0}),a);var O={};F(O,{default:()=>v});module.exports=L(O);var g=require("obsidian");var w={enabled:!0,mappings:[{name:"Projects",color:"#e74c3c",textColor:"#ffffff"},{name:"Design",color:"#3498db",textColor:"#ffffff"}],showDot:!0,topFolderFontWeight:800},v=class extends g.Plugin{constructor(){super(...arguments);this.settings=w;this.observer=null;this.explorerObservers=new Map}async onload(){this.settings=Object.assign({},w,await this.loadData()),console.log("FolderColorPlugin loaded",this.settings),this.addSettingTab(new x(this.app,this)),this.addCommand({id:"toggle-folder-colors",name:"Toggle folder colors",callback:async()=>{this.settings.enabled=!this.settings.enabled,await this.saveData(this.settings),this.settings.enabled?this.addStyles():this.removeStyles()}}),this.app.workspace.onLayoutReady(()=>{this.settings.enabled&&this.addStyles()})}onunload(){this.removeStyles(),console.log("FolderColorPlugin unloaded")}addStyles(){this.applyStructuralStyles(),this.settings.enabled&&(this.applyMappingsToAllExplorers(),this.setupObserversForExplorers())}removeStyles(){document.querySelectorAll(".tree-item.nav-folder, .nav-folder-title").forEach(t=>{let s=t;s.style.removeProperty("--tab-color"),s.style.removeProperty("color"),s.style.removeProperty("font-weight"),s.classList.remove("fc-dot-enabled")}),this.observer&&(this.observer.disconnect(),this.observer=null),this.explorerObservers.forEach(t=>t.disconnect()),this.explorerObservers=new Map}applyStructuralStyles(){document.querySelectorAll('.workspace-leaf-content[data-type="file-explorer"]').forEach(t=>{Array.from(t.querySelectorAll(".tree-item.nav-folder .nav-folder-title")).forEach(l=>{l.style.fontWeight=this.settings.topFolderFontWeight.toString(),this.settings.showDot?l.classList.add("fc-dot-enabled"):l.classList.remove("fc-dot-enabled")})})}applyMappingsToAllExplorers(){document.querySelectorAll('.workspace-leaf-content[data-type="file-explorer"]').forEach(t=>this.applyMappingsToDOM(t))}applyMappingsToDOM(e){let t=this.settings.mappings||[];if(!t.length)return;Array.from(e.querySelectorAll(".tree-item.nav-folder .nav-folder-title")).forEach(l=>{var h;let p=((h=l.textContent)==null?void 0:h.trim())||"",c=t.find(o=>o.name===p),d=l.closest(".tree-item.nav-folder");c&&d&&(d.style.setProperty("--tab-color",c.color),l.style.setProperty("--tab-color",c.color),l.style.color=c.textColor||"#ffffff"),this.settings.showDot?l.classList.add("fc-dot-enabled"):l.classList.remove("fc-dot-enabled"),l.style.fontWeight=this.settings.topFolderFontWeight.toString()})}setupObserversForExplorers(){this.observer&&this.observer.disconnect(),this.observer=new MutationObserver(s=>{s.forEach(l=>{l.addedNodes.forEach(p=>{p instanceof HTMLElement&&p.matches('.workspace-leaf-content[data-type="file-explorer"]')&&(this.applyMappingsToDOM(p),this.observeExplorerContainer(p))})})});let e=document.querySelector(".workspace");e&&this.observer.observe(e,{childList:!0,subtree:!0}),document.querySelectorAll('.workspace-leaf-content[data-type="file-explorer"]').forEach(s=>this.observeExplorerContainer(s))}observeExplorerContainer(e){if(this.explorerObservers.has(e))return;let t=new MutationObserver(()=>{this.applyMappingsToDOM(e)});t.observe(e,{childList:!0,subtree:!0}),this.explorerObservers.set(e,t)}},x=class extends g.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}display(){let{containerEl:e}=this;if(e.empty(),e.createEl("h2",{text:"Folder Color settings"}),new g.Setting(e).setName("Enable folder colors").setDesc("Toggle the folder color styling in the file explorer").addToggle(o=>o.setValue(this.plugin.settings.enabled).onChange(async n=>{this.plugin.settings.enabled=n,await this.plugin.saveData(this.plugin.settings),n?this.plugin.addStyles():this.plugin.removeStyles(),this.display()})),!this.plugin.settings.enabled){let o=e.createEl("p",{text:"Folder colors are currently disabled. Enable them to configure mappings."});o.style.color="var(--text-muted)",o.style.fontStyle="italic";return}new g.Setting(e).setName("Show colored dot").setDesc("Display a colored dot on top-level folders").addToggle(o=>o.setValue(this.plugin.settings.showDot).onChange(async n=>{this.plugin.settings.showDot=n,await this.plugin.saveData(this.plugin.settings),this.plugin.settings.enabled&&this.plugin.addStyles()})),e.createEl("h3",{text:"Folder \u2192 Color mappings"});let t=e.createDiv({cls:"folder-color-list"}),s=this.plugin.settings.mappings||[];s.forEach((o,n)=>{let r=t.createDiv({cls:"folder-mapping-row"});r.style.display="flex",r.style.alignItems="center",r.style.gap="10px",r.style.marginBottom="6px";let y=r.createEl("input",{attr:{type:"text",placeholder:"Folder name",value:o.name}});y.classList.add("folder-name-input"),y.style.flex="1",y.onchange=async()=>{s[n].name=y.value.trim(),await this.plugin.saveData(this.plugin.settings),this.plugin.settings.enabled&&this.plugin.addStyles(),this.display()};let E=r.createEl("span",{text:"BG",cls:"mapping-label"});E.title="Background color";let f=r.createEl("input",{attr:{type:"color",value:o.color||"#ff0000"}});f.style.width="40px",f.style.height="28px",f.style.cursor="pointer",f.onchange=async()=>{s[n].color=f.value,await this.plugin.saveData(this.plugin.settings),this.plugin.settings.enabled&&this.plugin.addStyles()};let S=r.createEl("span",{text:"TXT",cls:"mapping-label"});S.title="Text color";let u=r.createEl("input",{attr:{type:"color",value:o.textColor||"#ffffff"}});u.style.width="40px",u.style.height="28px",u.style.cursor="pointer",u.onchange=async()=>{s[n].textColor=u.value,await this.plugin.saveData(this.plugin.settings),this.plugin.settings.enabled&&this.plugin.addStyles()};let m=r.createEl("button",{text:"\u2715"});m.classList.add("mod-warning"),m.style.marginLeft="auto",m.title="Remove this mapping",m.onclick=async()=>{s.splice(n,1),await this.plugin.saveData(this.plugin.settings),this.plugin.settings.enabled&&this.plugin.addStyles(),this.display()}}),e.createEl("h4",{text:"Add new mapping"});let l=e.createDiv({cls:"folder-mapping-add"});l.style.display="flex",l.style.alignItems="center",l.style.gap="10px",l.style.marginTop="8px";let p=l.createEl("input",{attr:{type:"text",placeholder:"Folder name"}});p.style.flex="1";let c=l.createEl("input",{attr:{type:"color",value:"#ff0000"}});c.style.width="40px",c.style.height="28px",c.style.cursor="pointer";let d=l.createEl("input",{attr:{type:"color",value:"#ffffff"}});d.style.width="40px",d.style.height="28px",d.style.cursor="pointer";let h=l.createEl("button",{text:"Add mapping"});h.classList.add("mod-cta"),h.onclick=async()=>{let o=(p.value||"").trim();if(!o)return;let n=c.value||"#ffffff",r=d.value||"#ffffff";this.plugin.settings.mappings.push({name:o,color:n,textColor:r}),await this.plugin.saveData(this.plugin.settings),this.plugin.settings.enabled&&this.plugin.addStyles(),this.display()}}};
